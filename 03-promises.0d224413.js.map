{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAMC,SAASC,cAAc,UAC7BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAAAI,GACjBC,YAAW,W,OAAMD,EAAQ,CAAEN,WAAUC,S,GAAUA,E,EAG9B,SAACK,EAASE,GAC3BD,YAAW,W,OAAMC,EAAO,CAAER,WAAUC,S,GAAUA,E,GAwBpDR,EAAIgB,iBAAiB,SAAS,SAAAC,GAC5BA,EAAEC,iBApBJ,WAOE,IANA,IAAMC,EAAQC,OAAOjB,EAAWkB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAE9BG,EAAQL,EAEHM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BnB,EAAcmB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBV,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE1DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBV,EAAA8B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE5DgB,GAASF,C,CAMXW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst btn = document.querySelector('button');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      setTimeout(() => resolve({ position, delay }), delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => reject({ position, delay }), delay);\n    });\n  }\n}\n\nfunction runPromises() {\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  let timer = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, timer)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    timer += step;\n  }\n}\n\nbtn.addEventListener('click', e => {\n  e.preventDefault();\n  runPromises();\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btn","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","addEventListener","e","preventDefault","delay1","Number","value","step","amount","timer","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$runPromises"],"version":3,"file":"03-promises.0d224413.js.map"}